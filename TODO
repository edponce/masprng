put objects files in obj/
change datatypes to int64_t standard conventions
use typedef for aligned types, so aligned attribute is in one place
for now in LCG, init_rng datatypes do not necessarily match internal work variables (and maybe others). Will have to wait until developing other RNGs.

memory manager, output interface return primitive types instead of SIMD
provide 2 modes for layout of random numbers: (1) interleaved streams, (2) independent streams with additional function to change between streams


simd/sse4_1.h: *  NOTE: currently only support x86_64, GCC and Intel compilers
simd/sse4_1.h: *  NOTE: requires at least SSE 4.1 for _mm_mullo_epi32()
simd/sse4_1.h: *  NOTE: requires at least SSE 4.1 for _mm_mullo_epi32()
simd/sse4_1.h:// NOTE: requires at least SSE 4.1 for _mm_test_all_zeros()
simd/sse4_1.h: *  NOTE: type conversion performed with scalar FPU since SSE does not support 64-bit integer conversions.
simd/sse4_1.h: *  NOTE: type conversion performed with scalar FPU since SSE does not support 64-bit integer conversions.
lcg/lcg_globals.h: *  NOTE: all arrays should be aligned for SIMD mode, a macro is provided.
lcg/lcg_globals.h: *  NOTE: requires C++11 for non-static initialization in declaration of struct/class
lcg/vlcg.h:    // NOTE: thread-safe?
lcg/vlcg.cpp: *  NOTE: The gn parameter is the same for all streams since the generators are run
lcg/vlcg.cpp: *  NOTE: int and float streams use all parameters from input arrays,
lcg/vlcg.cpp: *  NOTE: A single and same prime number is used for all streams.
